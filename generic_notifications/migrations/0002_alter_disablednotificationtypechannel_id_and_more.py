# Generated by Django 5.2.5 on 2025-10-11 12:18

import django.db.models.deletion
from django.db import migrations, models


def migrate_channels_to_notificationchannel(apps, schema_editor):
    """Migrate data from channels JSONField to NotificationChannel model."""
    Notification = apps.get_model("generic_notifications", "Notification")
    NotificationChannel = apps.get_model("generic_notifications", "NotificationChannel")

    for notification in Notification.objects.all():
        # Create NotificationChannel entries for each channel
        for channel in notification.channels:
            delivery, created = NotificationChannel.objects.get_or_create(
                notification=notification,
                channel=channel,
            )

            # If this is the email channel and email_sent_at is set, mark it as sent
            if notification.email_sent_at:
                delivery.sent_at = notification.email_sent_at
                delivery.save()


def reverse_migrate_channels(apps, schema_editor):
    """Reverse migration: copy data back from NotificationChannel to channels JSONField."""
    Notification = apps.get_model("generic_notifications", "Notification")
    NotificationChannel = apps.get_model("generic_notifications", "NotificationChannel")

    for notification in Notification.objects.all():
        # Rebuild channels list from NotificationChannel entries
        channels = list(notification.channels.values_list("channel", flat=True))
        notification.channels = channels

        # Restore email_sent_at from email NotificationChannel
        try:
            email_delivery = notification.channels.get(channel="email")
            if email_delivery.sent_at:
                notification.email_sent_at = email_delivery.sent_at
        except NotificationChannel.DoesNotExist:
            pass

        notification.save()


class Migration(migrations.Migration):
    dependencies = [
        ("generic_notifications", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationChannel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("channel", models.CharField(max_length=20)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="channels",
                        to="generic_notifications.notification",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["notification", "channel", "sent_at"], name="generic_not_notific_956af2_idx"),
                    models.Index(fields=["channel", "sent_at"], name="generic_not_channel_cfce4f_idx"),
                ],
                "unique_together": {("notification", "channel")},
            },
        ),
        migrations.RunPython(
            migrate_channels_to_notificationchannel,
            reverse_migrate_channels,
        ),
    ]
